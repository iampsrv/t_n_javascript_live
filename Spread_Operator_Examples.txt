
Spread Operator in JavaScript
=============================

The spread operator (`...`) allows an iterable (e.g., array, string) to be expanded in places where zero or more arguments (for function calls) or elements (for array literals) are expected. It can also be used to spread elements of an object in object literals.

Uses of Spread Operator:
------------------------

1. Function Calls: Expands an iterable into individual arguments.
   Example:
   function sum(x, y, z) {
     return x + y + z;
   }
   const numbers = [1, 2, 3];
   console.log(sum(...numbers)); // Outputs: 6

2. Array Literals: Combines arrays or inserts elements from one array into another.
   Example:
   const fruits = ['apple', 'banana', 'pear'];
   const moreFruits = ['orange', 'peach', ...fruits]; // ['orange', 'peach', 'apple', 'banana', 'pear']

3. Object Literals: Combines objects or inserts properties from one object into another.
   Example:
   const user = { name: 'John', age: 30 };
   const clonedUser = { ...user, location: 'New York' }; // { name: 'John', age: 30, location: 'New York' }

4. String Expansion: Expands a string into an array of its characters.
   Example:
   const greeting = "Hello";
   const chars = [...greeting]; // ['H', 'e', 'l', 'l', 'o']

More Examples:
---------------

Combining Arrays:
const firstHalf = [1, 2, 3];
const secondHalf = [4, 5, 6];
const combined = [...firstHalf, ...secondHalf];
// combined is [1, 2, 3, 4, 5, 6]

Cloning Arrays:
const original = ['a', 'b', 'c'];
const copy = [...original];
// Modifying copy won't affect original

Converting NodeList to Array:
const nodeList = document.querySelectorAll('div');
const nodeArray = [...nodeList];

Using Math Functions:
const numbers = [10, 20, 60, 40, 5];
const maxNumber = Math.max(...numbers); // 60

Adding Items to an Array:
const fruits = ['apple', 'banana'];
const newFruits = ['orange', ...fruits, 'pear'];
// newFruits is ['orange', 'apple', 'banana', 'pear']

Destructuring with Rest:
const [first, ...rest] = [1, 2, 3, 4]; // first = 1, rest = [2, 3, 4]
const { a, ...others } = { a: 1, b: 2, c: 3 }; // a = 1, others = { b: 2, c: 3 }

Function Arguments:
function greet(firstName, lastName) {
  console.log(`Hello, ${firstName} ${lastName}!`);
}
const names = ['John', 'Doe'];
greet(...names); // Outputs: Hello, John Doe!
